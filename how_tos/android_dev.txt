https://github.com/cnlohr/rawdrawandroid


## Connecting
###############################################################################

In phone settings enable developer options and usb debugging.

Connect a usb lead from pc to phone.

If using WSL, you have to start by using the non WSL adb from Android Studio
because WSL doesn't support USB well enough to work:
   alias adb="/mnt/c/Users/andy/AppData/Local/Android/Sdk/platform-tools/adb.exe"

adb shell

If that didn't work:
    * Make sure the phone has a notification saying "USB debugging is on". This should appear as soon as you plug in the USB cable.
    * Make sure you're using the Android SDK's adb binary, not WSL's.
    * Also try "adb kill-server" and then try again. You might need to click OK on a dialog on the phone.

Find the phone's IP address:
    ip a | grep inet

exit

adb tcpip 4444

Remove the adb alias to go back to using the adb supplied with WSL.

adb connect <wlan0 IP>:4444

<optional> Unplug usb cable.



# Command line gdb
###############################################################################

https://simoneaonzo.it/gdb-android/

find ~/android-sdk/ -name gdbserver -type f

https://stackoverflow.com/a/74661064/66088

Find package name in AndroidManifest.xml


In shell window 1:

# Put lldb server on Android device
adb push $ndk/toolchains/llvm/prebuilt/windows-x86_64/lib64/clang/9.0.9/lib/linux/aarch64/lldb-server /data/local/tmp
adb shell chmod +x /data/local/tmp/lldb-server

# Kill any instance of lldb-server left over from a previous run.
adb shell run-as $package_name killall -9 lldb-server
sleep 1

# Run your program on Android device
adb shell run-as $package_name cp /data/local/tmp/lldb-server /data/data/$package_name/
adb shell am start -D -n "$package_name/android.app.NativeActivity"

adb shell run-as $package_name sh -c
    \data\data\$package_name\lldb-server platform --server --listen unix-abstract:\\\data\data\<package_name>/debug.socket
    /data/data/org.yourorg.cnfgtest/lldb-server platform --server --listen unix-abstract:///data/data/org.yourorg.cnfgtest/debug.socket


In shell window 2:

adb shell run-as $package_name ps
lldb
> platform select remote-android
> platform connect unix-abstract-connect:///data/data/<package_name>/debug.socket
> attach <pid>


In shell window 3:
adb shell run-as $package_name ps
adb forward tcp:12345 jdwp:<pid>
jdb -attach localhost:12345


## Nice logs
###############################################################################

adb logcat --pid=`adb shell pidof -s org.yourorg.cnfgtest` --format=color
